---
- name: Initialize Kubernetes Control Plane
  ansible.builtin.command: >-
    kubeadm init --apiserver-advertise-address={{ ansible_default_ipv4.address }}
    --pod-network-cidr={{ pod_network_cidr }}
    --cri-socket /run/containerd/containerd.sock
    --ignore-preflight-errors=NumCPU,Mem
  register: kubeadm_init
  failed_when: kubeadm_init.rc != 0 and 'preflight' not in kubeadm_init.stderr
  args:
    creates: /etc/kubernetes/admin.conf

- name: Create .kube directory
  ansible.builtin.file:
    path: /root/.kube
    state: directory
    mode: '0755'

- name: Copy kubeconfig
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: true

- name: Apply Flannel CNI
  ansible.builtin.command:
    cmd: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
  register: flannel_apply
  changed_when: "'created' in flannel_apply.stdout or 'configured' in flannel_apply.stdout"

- name: Wait for Flannel pods to be ready
  ansible.builtin.command:
    cmd: kubectl wait --for=condition=ready pod -l app=flannel -n kube-flannel --timeout=300s
  register: flannel_ready
  changed_when: false

- name: Generate kubeadm join command
  ansible.builtin.shell: kubeadm token create --print-join-command
  register: join_command
  changed_when: false

- name: Save join command to a file
  ansible.builtin.copy:
    content: "{{ join_command.stdout }}"
    dest: /etc/kubernetes/kubeadm_join_command
    mode: '0600'
