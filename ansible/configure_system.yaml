---
- name: Install packages
  hosts: local
  tags: prereqs
  vars_files:
  - properties.yaml
  
  tasks:
  - name: Configure groups, users, access
    block:
    - name: Create groups
      ansible.builtin.group:
        name: "{{ item.name }}"
        system: "{{ item.system | default('false') | bool }}"
      loop: "{{ archlinux.groups }}"

    - name: Create users
      ansible.builtin.user:
        name: "{{ item.name }}"
        comment: "{{ item.comment }}"
        append: "{{ item.append | default('false') | bool }}"
        group: "{{ item.group }}"
        groups: "{{ item.groups }}"
        create_home: "{{ item.create_home | default('false') | bool }}"
        system: "{{ item.system | default('true') | bool }}"  
      loop: "{{ archlinux.users }}"
      loop_control:
        label: "{{ item.comment }}"

    - name: Create directories
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: "{{ item.state | default('directory') }}"
        mode: "{{ item.mode | default('0770') }}"
        owner: "{{ item.owner | default('root') }}"
        group: "{{ item.group }}"
      loop: "{{ archlinux.directories }}"
      loop_control: 
        label: "{{ item.description }}"  
    become: yes
    become_user: root

  - name: Copy files
    block:
      - name: Copy docker files
        ansible.builtin.copy:
          src: "{{ item.src }}"
          dest: "{{ item.dest }}"
          owner: "{{ item.owner }}"
          group: "{{ item.group }}"
          mode: "{{ item.mode | default('0640') }}"
        loop: "{{ archlinux.files }}"
    become: yes
    become_user: root

  - name: Configure services
    block:

    - name: Generate systemd services from templates
      ansible.builtin.template:
        src: "{{ item.template_path }}"
        dest: /etc/systemd/system/{{ item.name }}.service
        mode: '0644'
      loop: "{{ archlinux.services.template }}"
      loop_control:
        label: "{{ item.description }}"

    - name: Issue systemd daemon-reload to pick up config changes
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: Enable services
      ansible.builtin.systemd_service:
        name: "{{ item.name }}"
        state: "{{ item.state | default('started') }}"
        enabled: "{{ item.state | default('true') | bool}}"
      loop: "{{ archlinux.services.execute }}"
      loop_control:
        label: "{{ item.description }}"

    - name: Init starship
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        regexp: '^eval "\$\(starship init bash\)"'
        line: eval "$(starship init bash)"
      become: false

    become: yes
    become_user: root
